document.addEventListener('DOMContentLoaded', function() {
    const fileCategories = {
        '–í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã': ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–õ–µ–∫—Ü–∏–∏'],
        '–ú–∞—Ç. –∞–Ω–∞–ª–∏–∑': ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–õ–µ–∫—Ü–∏–∏'],
        '–§–∏–∑. –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞': ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–õ–µ–∫—Ü–∏–∏'],
        '–û—Å–Ω–æ–≤—ã –Ω–∞—É—á. –∏—Å—Å–ª–µ–¥.': ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–õ–µ–∫—Ü–∏–∏'],
        '–ò–Ω–æ—Å—Ç. —è–∑—ã–∫': ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–õ–µ–∫—Ü–∏–∏'],
        '–ü–û–ó–ò': ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–õ–µ–∫—Ü–∏–∏'],
        '–î–∏—Å–∫—Ä–µ—Ç. –º–∞—Ç.': ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–õ–µ–∫—Ü–∏–∏'],
        '–≠–∫–æ–Ω–æ–º–∏–∫–∞': ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–õ–µ–∫—Ü–∏–∏'],
        '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö': ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–õ–µ–∫—Ü–∏–∏'],
        '–ê–ª–≥–æ—Ä–∏—Ç–º–∏–∑–∞—Ü–∏—è –∏ –ø—Ä–æ–≥—Ä–∞–º–º': ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–õ–µ–∫—Ü–∏–∏']
    };

    const categoryIcons = {
        '–í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã': 'üíª',
        '–ú–∞—Ç. –∞–Ω–∞–ª–∏–∑': 'üìä',
        '–§–∏–∑. –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞': 'üèãÔ∏è',
        '–û—Å–Ω–æ–≤—ã –Ω–∞—É—á. –∏—Å—Å–ª–µ–¥.': 'üîç',
        '–ò–Ω–æ—Å—Ç. —è–∑—ã–∫': 'üåç',
        '–ü–û–ó–ò': 'üîê',
        '–î–∏—Å–∫—Ä–µ—Ç. –º–∞—Ç.': 'üßÆ',
        '–≠–∫–æ–Ω–æ–º–∏–∫–∞': 'üí∞',
        '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö': 'üóÑÔ∏è',
        '–ê–ª–≥–æ—Ä–∏—Ç–º–∏–∑–∞—Ü–∏—è –∏ –ø—Ä–æ–≥—Ä–∞–º–º': 'üñ•Ô∏è'
    };

    // –°–æ–∑–¥–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Ñ–∞–π–ª–æ–≤
    let fileStorage = {};

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–∞–ø–∫–∏
    for (const category in fileCategories) {
        fileStorage[category] = {};
        for (const folder of fileCategories[category]) {
            fileStorage[category][folder] = [];
        }
    }

    const categoriesContainer = document.getElementById('file-categories');
    const categorySelect = document.getElementById('category-select');
    const folderSelect = document.getElementById('folder-select');
    const uploadForm = document.getElementById('upload-form');
    const uploadMessage = document.getElementById('upload-message');

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    for (const category in fileCategories) {
        const option = document.createElement('option');
        option.value = category;
        option.textContent = `${categoryIcons[category]} ${category}`;
        categorySelect.appendChild(option);
    }

    // –ó–∞–ø–æ–ª–Ω–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫
    categorySelect.addEventListener('change', function() {
        const selectedCategory = categorySelect.value;
        folderSelect.innerHTML = '';
        fileCategories[selectedCategory].forEach(folder => {
            const option = document.createElement('option');
            option.value = folder;
            option.textContent = folder;
            folderSelect.appendChild(option);
        });
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
    function displayFiles() {
        categoriesContainer.innerHTML = '';
        for (const [category, folders] of Object.entries(fileCategories)) {
            const categoryDiv = document.createElement('div');
            categoryDiv.className = 'file-category';
            
            const categoryTitle = document.createElement('h3');
            categoryTitle.innerHTML = `${categoryIcons[category]} ${category}`;
            categoryDiv.appendChild(categoryTitle);

            const folderList = document.createElement('ul');
            folders.forEach(folder => {
                const listItem = document.createElement('li');
                const link = document.createElement('a');
                link.href = '#';
                link.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-folder" viewBox="0 0 16 16">
                    <path d="M.54 3.87.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.826a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31zM2.19 4a1 1 0 0 0-.996 1.09l.637 7a1 1 0 0 0 .995.91h10.348a1 1 0 0 0 .995-.91l.637-7A1 1 0 0 0 13.81 4H2.19zm4.69-1.707A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707z"/>
                </svg> ${folder}`;
                listItem.appendChild(link);

                // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
                const filesList = document.createElement('ul');
                filesList.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                fileStorage[category][folder].forEach(file => {
                    const fileItem = document.createElement('li');
                    fileItem.textContent = file;
                    filesList.appendChild(fileItem);
                });
                listItem.appendChild(filesList);

                // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –ø–∞–ø–∫–∏
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    filesList.style.display = filesList.style.display === 'none' ? 'block' : 'none';
                });

                folderList.appendChild(listItem);
            });

            categoryDiv.appendChild(folderList);
            categoriesContainer.appendChild(categoryDiv);
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    uploadForm.addEventListener('submit', function(e) {
        e.preventDefault();
        const formData = new FormData(uploadForm);

        fetch('/var/www/downloads.php', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                uploadMessage.textContent = data.message;
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ fileStorage
                const category = formData.get('category');
                const folder = formData.get('folder');
                const fileName = formData.get('file').name;
                if (!fileStorage[category]) {
                    fileStorage[category] = {};
                }
                if (!fileStorage[category][folder]) {
                    fileStorage[category][folder] = [];
                }
                fileStorage[category][folder].push(fileName);
                
                uploadForm.reset();
                // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
                displayFiles();
            } else {
                uploadMessage.textContent = data.message;
            }
        })
        .catch(error => {
            uploadMessage.textContent = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞.';
        });
    });

    // –ò–Ω–∏—Ü–∏–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    displayFiles();
});
